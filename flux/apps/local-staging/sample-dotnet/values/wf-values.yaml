environment: "prod"
namespace: "project-001-wf-local" # Base namespace for deployments

config:
  ASPNETCORE_ENVIRONMENT: "Development" # Add any application-specific configurations here

argo:
  repoURL: https://github.com/huseyindeniz/gitops-lab.git # Repository URL for your chart
  targetRevision: "main" # Git branch or tag to deploy
  chartPath: "helm-charts/dotnet-core-webapi" # Path to the chart directory in the repo
  server: "https://172.17.0.5:8443"

# Deployment configuration
replicaCount: 1
# Resource requests and limits (optional)
resources:
  app:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "200m"
      memory: "256Mi"
  migration:
    requests:
      cpu: "200m"
      memory: "1Gi"
    limits:
      cpu: "600m"
      memory: "4Gi"

hpa:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
  stabilizationWindowSeconds: 60
  scaleDownType: "Pods"
  scaleDownValue: 1
  scaleDownPeriodSeconds: 60
  scaleUpType: "Percent"
  scaleUpValue: 100
  scaleUpPeriodSeconds: 15

vpa:
  enabled: false
  updateMode: "Auto"
  minAllowed:
    cpu: "100m"
    memory: "128Mi"
  maxAllowed:
    cpu: "2000m"
    memory: "4Gi"

service:
  type: ClusterIP # Options: ClusterIP, NodePort, LoadBalancer (we have istio)
  port: 80 # External port for the service
  targetPort: 8080 # Internal port the app listens on
  annotations: {} # Optional, e.g., annotations for load balancers or service meshes

ingress:
  enabled: false

virtualService:
  enabled: true

gateway: istio-ingressgateway-staging

image:
  repository: "huseyindeniz/msa1-wf"
  pullPolicy: IfNotPresent

migration:
  enabled: true
  action: "apply"
  targetMigration: ""
  resources:
    limits:
      cpu: "500m"
      memory: "512Mi"
    requests:
      cpu: "250m"
      memory: "256Mi"

database:
  host: "your-database-host"
  port: "5432"
  name: "your-database-name"
  user: "db-user"
  passwordKey: "db-password"
