apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: project-001-wf-local-appset-staging
  namespace: argo-local
spec:
  generators:
    - list:
        elements:
          - envName: stag-1
            servicePort: 5001
            host: "wf-stag-1.local"
            strategy: "standard" # standard, bluegreen, canary
            imgTag: "20241112181319" # {"$imagepolicy": "flux-system:project-001-wf-local-stag-1-app-image-policy:tag"}
            imgMigrationTag: "20241112181220" # {"$imagepolicy": "flux-system:project-001-wf-local-stag-1-migration-image-policy:tag"}
            migrationAction: "apply" # apply, reset, rollback
            targetMigration: "" # if rollback selected, set target migration name
          - envName: stag-2
            servicePort: 5002
            host: "wf-stag-2.local"
            strategy: "standard" # standard, bluegreen, canary
            imgTag: "20241112181043" # {"$imagepolicy": "flux-system:project-001-wf-local-stag-2-app-image-policy:tag"}
            imgMigrationTag: "20241112180957" # {"$imagepolicy": "flux-system:project-001-wf-local-prod-stag-2-migration-image-policy:tag"}
            migrationAction: "apply" # apply, reset, rollback
            targetMigration: "" # if rollback selected, set target migration name
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  template:
    metadata:
      name: "project-001-wf-{{.envName}}"
    spec:
      project: default
      source:
        repoURL: https://github.com/huseyindeniz/gitops-lab.git
        targetRevision: main
        path: "helm-charts/dotnet-core-webapi"
        helm:
          valueFiles:
            - values.yaml
            - $valuesRef/flux/local/applications/project-001/values/wf-staging-values.yaml
          valuesObject:
            environment: "{{ .envName }}"
            strategy: "{{ .strategy }}"
            service:
              port: "{{ .servicePort }}"
            ingress:
              host: "{{ .host }}"
            image:
              tag: "{{ .imgTag }}"
            migration:
              tag: "{{ .imgMigrationTag }}"
              action: "{{ .migrationAction }}"
              targetMigration: "{{ .targetMigration }}"
            database:
              host: "project-001-wf-local-{{ .envName }}-postgresql"
              port: "5432"
              name: "db_{{ .envName }}"
              user: "user_{{ .envName }}"
              secretName: "project-001-wf-local-{{ .envName }}-postgres-password"
              passwordKey: "POSTGRES_PASSWORD"
      destination:
        server: "https://kubernetes.default.svc"
        namespace: "project-001-wf-local-{{ .envName }}" # Use the environment suffix in the namespace
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
          allowEmpty: false
        retry:
          limit: 1
        syncOptions:
          - SkipHooksOnError=true # Ensures Argo CD skips retries if a Helm hook fails
