environment: "your-env-name"
namespace: "your-app-namespace"          # Base namespace for deployments

config:
  ASPNETCORE_ENVIRONMENT: "Development"             # Add any application-specific configurations here

argo:
  repoURL: "https://github.com/your-org/your-repo"  # Repository URL for your chart
  targetRevision: "main"                            # Git branch or tag to deploy
  chartPath: "path/to/chart"                        # Path to the chart directory in the repo
  server: "https://kubernetes.default.svc" 

replicaCount: 1

# Resource requests and limits (optional)
resources:
  app:
    requests:
      cpu: "100m"
      memory: "128Mi"
    limits:
      cpu: "200m"
      memory: "256Mi"
  migration:
    requests:
      cpu: "200m"
      memory: "1Gi"
    limits:
      cpu: "600m"
      memory: "4Gi"

hpa:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

vpa:
  enabled: false
  updateMode: "Auto"
  minAllowed:
    cpu: "100m"
    memory: "128Mi"
  maxAllowed:
    cpu: "2000m"
    memory: "4Gi"

service:
  type: ClusterIP                # Options: ClusterIP, NodePort, LoadBalancer
  port: 80                          # External port for the service
  targetPort: 8080                  # Internal port the app listens on
  annotations: {}                   # Optional, e.g., annotations for load balancers or service meshes

ingress:
  enabled: false
  host: "example.com"                   # Set to your domain
  annotations: {}                       # Add any specific annotations
  tls: false                            # Toggle for enabling TLS
  tlsSecret: ""                         # Specify TLS secret if TLS is enabled

virtualService:
  enabled: true
  hosts:
    - "domain of the app"

image:
  repository: "your-docker-repo/app-image"
  pullPolicy: IfNotPresent

migration:
  enabled: true
  image:
    repository: "your-docker-repo/migration-job"
    tag: "latest"
  action: "apply"
  targetMigration: ""

database:
  host: "your-database-host"
  port: "5432"
  name: "your-database-name"
  user: "db-user"
  secretName: "db-credentials-secret"
  passwordKey: "db-password"

# Define the deployment strategy to use
# valid values: standard, bluegreen, canary
strategy: standard

# Configuration for blue-green deployment
blueGreen:
  autoPromotionEnabled: true
  autoPromotionSeconds: 30
  previewReplicaCount: 1

# Configuration for canary deployment
canary:
  steps:
    - setWeight: 25
    - pause: 
        duration: 30
    - setWeight: 50
    - pause: 
        duration: 30
    - setWeight: 100