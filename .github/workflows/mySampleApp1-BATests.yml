name: MySampleApp1 - BA Tests

on:
  repository_dispatch:
    types: [mysampleapp1-ba-tests]    
  workflow_dispatch:
    inputs:
      environment:
        description: "Select the environment"
        required: true
        type: environment

jobs:
  behaviour-tests:
    runs-on: arc-runner

    steps:
    - name: Determine environment
      run: |
        if [[ "${{ github.event_name }}" == "repository_dispatch" ]]; then
          echo "SELECTED_ENV=${{ github.event.client_payload.environment }}" >> $GITHUB_ENV
        else
          echo "SELECTED_ENV=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
        fi
          
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.18.1'

    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install dependencies
      run: npm ci
      working-directory: ./apps/my-sample-app-1/mySampleApp1.behaviourTests
     
    - name: Run tests
      run: npm run test:${{env.SELECTED_ENV}}
      working-directory: ./apps/my-sample-app-1/mySampleApp1.behaviourTests

  pr_status:
    runs-on: ubuntu-latest
    needs: [behaviour-tests]
    steps:
      - name: Set PR Status to Success
        uses: actions/github-script@v6
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const { owner, repo } = context.repo;
            const sha = context.payload.pull_request.head.sha; 
            await github.rest.repos.createCommitStatus({
              owner: owner,
              repo: repo,
              sha: sha,
              state: 'success',
              context: 'BA Tests Check',
              description: 'BA TESTS SUCCESSFUL',
            });
