name: Find Latest Deployment Tag

on:
  workflow_call:
    inputs:
      pr_number:
        required: true
        type: string
      env_name:
        required: true
        type: string
      last_day:
        required: false
        type: string
        default: 24 hours ago
  workflow_dispatch:
    inputs:
      pr_number:
        required: true
        type: string
      env_name:
        required: true
        type: string
      last_day:
        required: false
        type: string
        default: 24 hours ago
jobs:
  search-deployment-tag:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get ISO timestamp for cutoff
        id: time_calc
        run: |
          # Get the cutoff time in UTC
          cutoff_time=$(date --utc --date="${{ inputs.last_day }}" +%Y-%m-%dT%H:%M:%SZ)
          echo "Calculated cutoff time: $cutoff_time"
          echo "cutoff_time=$cutoff_time" >> $GITHUB_ENV
          echo "env_name is: ${{ inputs.env_name }}"

      - name: Debug - Print all comments
        run: |
          echo "PR Comments (with createdAt, author, and date filter):"
          gh pr view "$PR_NUMBER" --json comments --jq '
            .comments | 
            .[] | 
            select(
              .createdAt > "${{ env.cutoff_time }}" and
              .author.login == "github-actions"
            ) | 
            "\(.createdAt) - \(.author.login): \(.body)"'
          echo "Cutoff time: ${{ env.cutoff_time }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Find Comment with Deployment tag
        id: fetch-recent-comments
        run: |
          PR_NUMBER="${{ inputs.pr_number }}"
          LAST_DAY="${{ env.cutoff_time }}"

          # Fetch latest comment matching the time condition, pattern, and author
          LATEST_VALID_COMMENT=$(gh pr view "$PR_NUMBER" --json comments --jq \
            ".comments | sort_by(.createdAt) | reverse | .[] | \
            select( \
              .createdAt > \"$LAST_DAY\" and \
              .author.login == \"github-actions\" and \
              (.body | test(\"^Published image: msa1-wf-api-${{ inputs.env_name }}\")) \
            ) | .body"
          )

          if [[ -z "$LATEST_VALID_COMMENT" ]]; then
            echo "No valid comment found."
            exit 1
          else
            echo "Latest valid deployment tag found: $LATEST_VALID_COMMENT"
            TAG=$(echo "$LATEST_VALID_COMMENT" | grep -oP "(?<=^Published image: ).*")
            echo "deployment_tag=$TAG" >> $GITHUB_ENV
          fi

        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
