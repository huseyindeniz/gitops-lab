apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: project-001-appset
  namespace: argo-cd-local
spec:
  generators:
    - matrix:
        generators:
          - git:
              repoURL: https://github.com/huseyindeniz/cicd-lab.git
              revision: main
              directories:
                - path: helm-charts/project-001/*  # Use wildcard to detect all subdirectories        
          - list:
              elements:
              - envName: stag-1
                envPort: 5001
              - envName: stag-2
                envPort: 5002
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  template:
    metadata:
      name: '{{.path.basename}}-{{.envName}}'  # Use the directory name and environment as the application name
      annotations:
        image.toolkit.fluxcd.io/automated: "true"  # Enable automatic updates
        image.toolkit.fluxcd.io/container.image: '{{.path.basename}}-{{.envName}}-webapi'  # Track this container image
        image.toolkit.fluxcd.io/image-ref: 'project-001-wf-{{.envName}}:{{.path.basename}}-{{.envName}}-imagepolicy'  # Reference to the ImagePolicy
    #     argocd-image-updater.argoproj.io/image-list: app-container=huseyindeniz/my-sample-app-1-weatherforecast-api-{{.envName}}, migration-container=huseyindeniz/my-sample-app-1-weatherforecast-migration-{{.envName}}
    #     argocd-image-updater.argoproj.io/app-container.update-strategy: alphabetical # Or semver if you use versioning
    #     argocd-image-updater.argoproj.io/migration-container.update-strategy: alphabetical # Or semver if you use versioning
    #     argocd-image-updater.argoproj.io/app-container.tag-regex: '^\d{14}$' # Matches YYYYMMDDHHMMSS format
    #     argocd-image-updater.argoproj.io/migration-container.tag-regex: '^\d{14}$' # Matches YYYYMMDDHHMMSS format
    spec:
      project: default
      source:
        repoURL: https://github.com/huseyindeniz/cicd-lab.git
        targetRevision: main
        path: 'helm-charts/project-001/{{.path.basename}}'  # Dynamically use each directory
        helm:
          valueFiles:
            - values-staging.yaml
            - 'values-staging-{{.envName}}.yaml'
          parameters:
            - name: environment
              value: '{{.envName}}'  # Access the environment name from the list
            - name: port
              value: '{{.envPort}}'  # Access the target port from the list
      destination:
        server: "https://kubernetes.default.svc"
        namespace: 'project-001-{{.path.basename}}-{{.envName}}'  # Use the environment suffix in the namespace
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
          allowEmpty: false
